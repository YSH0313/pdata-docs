import{_ as d,c as r,a as e,b as s,d as a,e as l,f as p,r as t,o as u}from"./app-DgHb7HAz.js";const m={};function c(v,n){const i=t("RouteLink"),o=t("ImageCard");return u(),r("div",null,[n[10]||(n[10]=e("p",null,[s("在一些情况下，我们需要一个任务可以按照我们想让它执行的时间来自动的周期性的执行，那么此时就需要有 "),e("code",null,"定时任务"),s(" ，那么我们的平台也是考虑到了这一点，支持了此项需求。")],-1)),n[11]||(n[11]=e("h2",{id:"创建定时任务",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#创建定时任务"},[e("span",null,"创建定时任务")])],-1)),n[12]||(n[12]=e("p",null,"定时任务的创建与创建普通任务无异。",-1)),e("ul",null,[e("li",null,[n[1]||(n[1]=s("首先根据 ")),a(i,{to:"/guide/cmiasoo1/#%E5%88%9B%E5%BB%BA%E4%BB%BB%E5%8A%A1"},{default:l(()=>n[0]||(n[0]=[s("创建任务")])),_:1}),n[2]||(n[2]=s(" 指引，创建您的任务。"))]),e("li",null,[n[4]||(n[4]=s("接着您在 ")),a(i,{to:"/guide/cmiasoo1/#_2-%E4%BB%BB%E5%8A%A1%E5%90%AF%E5%8A%A8"},{default:l(()=>n[3]||(n[3]=[s("任务启动")])),_:1}),n[5]||(n[5]=s(" 教学中可以看到启动方式有多种，启动时选择 ")),n[6]||(n[6]=e("code",null,"定时",-1)),n[7]||(n[7]=s(" 和期望执行的 ")),n[8]||(n[8]=e("code",null,"节点",-1)),n[9]||(n[9]=s("。"))])]),a(o,{image:"/scheduled/scheduled.png",title:"定时任务",description:"选择选择 `定时` 和期望执行的 `节点` 后，点击新增按钮，根据 Cron 表达式选择定时任务的执行周期，完成添加后，任务会在您选择的 Crond 表达式周期内执行执行。",href:"/",author:"yuanshaohang",date:"2024/05/21"}),n[13]||(n[13]=p(`<h2 id="cron-表达式" tabindex="-1"><a class="header-anchor" href="#cron-表达式"><span>Cron 表达式</span></a></h2><ul><li>在这里可以帮助您了解 <a href="https://www.tutorialspoint.com/unix_commands/crontab.htm" target="_blank" rel="noopener noreferrer">Cron 表达式</a></li></ul><p><code>Cron</code> 表达式书写格式与linux系统上的 <code>crontab</code> 表达式格式一致，<code>Cron表达式</code> 在定时任务调度中被广泛使用，通过灵活组合各个字段和特殊字符，可以实现复杂的定时任务需求。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>*    *    *   *    *  Command_to_execute</span></span>
<span class="line"><span>|    |    |    |   |       </span></span>
<span class="line"><span>|    |    |    |    Day of the Week ( 0 - 6 ) ( Sunday = 0 )</span></span>
<span class="line"><span>|    |    |    |</span></span>
<span class="line"><span>|    |    |    Month ( 1 - 12 )</span></span>
<span class="line"><span>|    |    |</span></span>
<span class="line"><span>|    |    Day of Month ( 1 - 31 )</span></span>
<span class="line"><span>|    |</span></span>
<span class="line"><span>|    Hour ( 0 - 23 )</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>Min ( 0 - 59 )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>*</code>：表示匹配该域的任意值。</li><li><code>-</code>：表示范围。例如在Minutes域使用5~20，表示从5分到20分钟每分钟触发一次。</li><li><code>/</code>：表示起始时间开始触发，然后每隔固定时间触发一次。例如在Minutes域使用5/20，则意味着5分钟触发一次，而25、45等分别触发一次。</li><li><code>,</code>：表示列出枚举值。例如：在Minutes域使用5,20，则意味着在5和20分每分钟触发一次。</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>您可以到 <a href="https://crontab.guru/" target="_blank" rel="noopener noreferrer">Cronitor</a> 检验您的表达式是否符合预期。</p></div>`,6))])}const g=d(m,[["render",c],["__file","index.html.vue"]]),f=JSON.parse('{"path":"/guide/vi87bp99/","title":"定时任务","lang":"zh-CN","frontmatter":{"title":"定时任务","icon":"mdi:invoice-text-scheduled-outline","createTime":"2024/12/11 11:41:50","permalink":"/guide/vi87bp99/"},"headers":[],"readingTime":{"minutes":1.7,"words":510},"git":{"updatedTime":1741000553000,"contributors":[{"name":"袁少航","username":"袁少航","email":"yuanshaohang@dataoceanai.com","commits":1,"avatar":"https://avatars.githubusercontent.com/袁少航?v=4","url":"https://github.com/袁少航"}]},"filePathRelative":"guide/scheduled/scheduled.md","bulletin":false}');export{g as comp,f as data};
