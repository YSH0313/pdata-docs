import{_ as e,c as d,f as r,o}from"./app-DgHb7HAz.js";const s={};function n(a,t){return o(),d("div",null,t[0]||(t[0]=[r(`<table style="width:100%;border-collapse:collapse;"><thead><tr><th style="white-space:nowrap;">Configuration Item</th><th style="white-space:nowrap;">Parameter Name</th><th style="white-space:nowrap;">Description</th><th style="white-space:nowrap;">Default Parameter</th></tr></thead><tbody><tr><td style="width:20%;">Concurrency</td><td>PREFETCH_COUNT</td><td>Parameter that controls the <code>concurrent request count</code></td><td>50</td></tr><tr><td>Max Priority</td><td>X_MAX_PRIORITY</td><td>Parameter that allows the priority queue&#39;s <code>maximum</code> priority</td><td>15</td></tr><tr><td>Breakpoint Resume</td><td>Breakpoint</td><td>Whether to use the breakpoint resume function (<code>Memory queue mode is unavailable</code>)</td><td>True</td></tr><tr><td>Timeout Setting</td><td>TIME_OUT</td><td>Request timeout</td><td>40</td></tr><tr><td>Max Retry Count</td><td>max_request</td><td>Maximum number of retries for request failure</td><td>4</td></tr><tr><td>Retry HTTP Codes</td><td>retry_http_codes</td><td>Failed (non-200) status codes that are retried according to the set maximum retry count. Default retries 3 times for codes not in the list</td><td>[209, 206, 301, 302, 400, 403, 404, 405, 408, 412, 429, 500, 502, 503, 504, 505, 521]</td></tr><tr><td>UA Pool Proxy</td><td>UA_PROXY</td><td>Whether to add dynamic UA request headers for network requests</td><td>False</td></tr><tr><td>IP Proxy</td><td>IS_PROXY</td><td>Whether to use IP proxy for network requests</td><td>False</td></tr><tr><td>Same IP Session</td><td>IS_SAMEIP</td><td>Whether to use the same IP for the entire session cycle when using IP proxy (<code>Effective when IS_PROXY=True</code>)</td><td>False</td></tr><tr><td>Proxy Whitelist</td><td>Agent_whitelist</td><td>When using IP proxy for network requests, ignore the proxy for the added whitelist (<code>Effective when IS_PROXY=True</code>)</td><td>[&#39;127.0.0.1&#39;]</td></tr><tr><td>Redis Connection</td><td>redis_connection</td><td>Whether to enable the Redis connection</td><td>False</td></tr><tr><td>Redis Service Address</td><td>REDIS_HOST_LISTS</td><td>Address of the Redis queue service</td><td><pre><code>[{&#39;your host&#39;: your port}]</code></pre></td></tr><tr><td>Kafka Connection</td><td>kafka_connection</td><td>Whether to enable the Kafka connection</td><td>False</td></tr><tr><td>Kafka Service Address</td><td>kafka_servers</td><td>Address of the Kafka queue service</td><td><pre><code>kafka_servers = {
    &#39;server&#39;: &#39;your_server&#39;,
    &#39;topic&#39;: &#39;your_topic&#39;
}</code></pre></td></tr><tr><td>Rabbitmq Connection</td><td>IS_connection</td><td>Whether to enable the Rabbitmq connection</td><td>False</td></tr><tr><td>Rabbitmq Service Address</td><td>Rabbitmq</td><td>Address of the Rabbitmq queue service</td><td><pre><code>Rabbitmq = {
    &#39;Sgin&#39;: &#39;ysh&#39;,
    &#39;username&#39;: &#39;your_username&#39;,
    &#39;password&#39;: &#39;your_password&#39;,
    &#39;host&#39;: &#39;your_host&#39;,
    &#39;port&#39;: &#39;your_port&#39;,
    &#39;max_retries&#39;: 3,
    &#39;async_thread_pool_size&#39;: 4,
}</code></pre></td></tr><tr><td>Queue Max Idle Time</td><td>Waiting_time</td><td>Maximum idle time allowed for the queue (<code>in seconds</code>). Must be longer than the request timeout</td><td>200</td></tr><tr><td>Log Level</td><td>log_level</td><td>Log level</td><td>DEBUG</td></tr></tbody></table>`,1)]))}const c=e(s,[["render",n],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/en/config/2l69gbsm/","title":"Config items","lang":"en-US","frontmatter":{"title":"Config items","icon":"tdesign:task-setting","createTime":"2024/12/16 15:53:38","permalink":"/en/config/2l69gbsm/"},"headers":[],"readingTime":{"minutes":1.85,"words":555},"git":{"updatedTime":1741000553000,"contributors":[{"name":"袁少航","username":"袁少航","email":"yuanshaohang@dataoceanai.com","commits":1,"avatar":"https://avatars.githubusercontent.com/袁少航?v=4","url":"https://github.com/袁少航"}]},"filePathRelative":"en/config/setting.md","bulletin":false}');export{c as comp,u as data};
