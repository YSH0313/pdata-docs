import{_ as t}from"./grpc-BllGfbac.js";import{_ as r,c as a,f as n,o}from"./app-DgHb7HAz.js";const i={};function s(l,e){return o(),a("div",null,e[0]||(e[0]=[n('<p>在主从节点通信性能问题上一直是工程师们所追求的，那么公认的高性能 RPC 通信框架就是 <a href="https://grpc.io/" target="_blank" rel="noopener noreferrer">gRPC</a> 了，那么我们这套系统也采用了这套解决方案来实现我们的主从节点之间的通信，并且我们还使用了 gRPC 更高效的双向流模式。</p><p>下面是 PDATA 中节点通信示意图：</p><div style="text-align:center;"><p><img src="'+t+'" alt="主从节点"></p></div><p>可以看出主从节点中的调用关系很简单，这得益于 <a href="https://grpc.io/" target="_blank" rel="noopener noreferrer">gRPC</a> 强大的通信能力，难点主要是在于书写 <a href="https://grpc.io/" target="_blank" rel="noopener noreferrer">gRPC</a> 通信代码的过程，而这您无需考虑，因为系统内部已经为您完成了。</p>',4)]))}const c=r(i,[["render",s],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/guide/rjnognk8/","title":"节点通信","lang":"zh-CN","frontmatter":{"title":"节点通信","icon":"solar:command-linear","createTime":"2024/12/11 17:47:24","permalink":"/guide/rjnognk8/"},"headers":[],"readingTime":{"minutes":0.66,"words":197},"git":{"updatedTime":1741000553000,"contributors":[{"name":"袁少航","username":"袁少航","email":"yuanshaohang@dataoceanai.com","commits":1,"avatar":"https://avatars.githubusercontent.com/袁少航?v=4","url":"https://github.com/袁少航"}]},"filePathRelative":"guide/gears/3.node-comm.md","bulletin":false}');export{c as comp,g as data};
